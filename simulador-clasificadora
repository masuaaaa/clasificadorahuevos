<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Simulador Clasificadora de Huevos</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background: #f7f9fc; }
    .card { border-radius: 1rem; box-shadow: 0 4px 8px rgba(0,0,0,0.05); }
    .chatbot-box { height: 300px; overflow-y: auto; background: #fff; border: 1px solid #ced4da; border-radius: 0.5rem; padding: 1rem; }
    .chatbot-input { resize: none; }
    .egg-log { max-height: 200px; overflow-y: auto; font-size: 0.9rem; }
    #machineImage { max-width: 100%; border-radius: 1rem; margin-bottom: 20px; }
  </style>
</head>
<body>
  <div class="container py-4">
    <h1 class="text-center mb-4">Simulador ‚Äì Clasificadora de Huevos</h1>

    <!-- Imagen de la m√°quina -->
    <div class="text-center">
      <img id="machineImage" src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Egg_sorting_machine.jpg/640px-Egg_sorting_machine.jpg" alt="Imagen de la clasificadora de huevos">
    </div>

    <!-- Configuraci√≥n de la m√°quina -->
    <div class="card mb-4 p-4">
      <h4 class="mb-3">Par√°metros de la m√°quina</h4>
      <form id="configForm" class="row g-3">
        <div class="col-md-4">
          <label for="serial" class="form-label">N√∫mero de serie (6 d√≠gitos)</label>
          <input type="text" class="form-control" id="serial" maxlength="6" pattern="\d{6}" placeholder="123456" required>
        </div>
        <div class="col-md-4">
          <label for="simTime" class="form-label">Tiempo de simulaci√≥n (minutos)</label>
          <input type="number" class="form-control" id="simTime" min="1" value="1" required>
        </div>
        <div class="col-md-4 d-flex align-items-end">
          <button type="submit" class="btn btn-success w-100">Iniciar simulaci√≥n</button>
        </div>
      </form>
    </div>

    <!-- Resultados de la simulaci√≥n -->
    <div id="resultCard" class="card mb-4 p-4 d-none">
      <h4>Resultados</h4>
      <p id="summary"></p>
      <table class="table table-bordered mb-3">
        <thead class="table-light"><tr><th>Categor√≠a</th><th>Cantidad</th></tr></thead>
        <tbody id="resultBody"></tbody>
      </table>
      <details>
        <summary>Ver detalle de cada huevo</summary>
        <div id="log" class="egg-log border rounded p-2 mt-2"></div>
      </details>
    </div>

    <!-- ChatBot IA Huev√≠n -->
    <div class="card p-4">
      <h4>Asistente Virtual <strong>Huev√≠n</strong></h4>
      <div id="chatbot" class="chatbot-box mb-3"></div>
      <textarea id="chatInput" rows="2" class="form-control chatbot-input mb-2" placeholder="Preg√∫ntale a Huev√≠n..."></textarea>
      <button id="sendBtn" class="btn btn-primary">Enviar</button>
    </div>
  </div>

<script>
  const categories = [
    { name: 'JUMBO', min: 78, max: Infinity },
    { name: 'AAA', min: 67, max: 77.99 },
    { name: 'AA', min: 60, max: 66.99 },
    { name: 'A', min: 53, max: 59.59 },
    { name: 'B', min: 46, max: 52.99 }
  ];

  const removeAccents = str => str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

  document.getElementById('configForm').addEventListener('submit', e => {
    e.preventDefault();
    const serial = document.getElementById('serial').value;
    const minutes = parseInt(document.getElementById('simTime').value);
    if (!/^\d{6}$/.test(serial)) return alert('N√∫mero de serie inv√°lido. Debe tener 6 d√≠gitos.');
    runSimulation(serial, minutes);
  });

  function runSimulation(serial, minutes) {
    const eggsPerMinute = 1800 / 60;
    const totalEggs = Math.round(eggsPerMinute * minutes);
    const resultCounts = { JUMBO: 0, AAA: 0, AA: 0, A: 0, B: 0 };
    const logContainer = document.getElementById('log');
    logContainer.innerHTML = '';

    for (let i = 0; i < totalEggs; i++) {
      const weight = parseFloat((46 + Math.random() * 39).toFixed(1));
      const cat = categories.find(c => weight >= c.min && weight <= c.max)?.name || 'B';
      resultCounts[cat]++;
      const div = document.createElement('div');
      div.textContent = `Huevo ${i + 1}: ${weight} g ‚Üí ${cat}`;
      logContainer.appendChild(div);
    }

    const tbody = document.getElementById('resultBody');
    tbody.innerHTML = '';
    categories.forEach(cat => {
      const tr = document.createElement('tr');
      tr.innerHTML = `<td>${cat.name}</td><td>${resultCounts[cat.name]}</td>`;
      tbody.appendChild(tr);
    });
    document.getElementById('summary').textContent = `Serie: ${serial} | Tiempo: ${minutes} min | Huevos procesados: ${totalEggs}`;
    document.getElementById('resultCard').classList.remove('d-none');
  }

  // IA HUEV√çN
  function botReply(msg) {
    const text = removeAccents(msg.toLowerCase());
    const info = {
      uso: 'Pasos para usar la m√°quina:\n1. Se calibra la m√°quina.\n2. Se coloca un peso de 78 gramos en el sensor de peso.\n3. El bot√≥n azul parpadea indicando que la m√°quina est√° lista.\n4. Retiramos el peso.\n5. Iniciamos o detenemos el proceso con los botones azul y rojo.',
      botones: 'La m√°quina tiene tres botones:\n- Rojo: detener.\n- Azul: calibraci√≥n.\n- Verde: arranque.\nTambi√©n cuenta con un switch de encendido.',
      energia: 'La m√°quina funciona con bajo consumo: 110V.',
      capacidad: 'Clasifica hasta 1800 huevos por hora en cinco categor√≠as.',
      categorias: 'Categor√≠as:\n- JUMBO: >78g\n- AAA: 67‚Äì77.99g\n- AA: 60‚Äì66.99g\n- A: 53‚Äì59.59g\n- B: 46‚Äì52.99g',
      calibracion: 'Para calibrar:\n1. Presiona azul.\n2. Coloca peso de 78g.\n3. Espera que parpadee.\n4. Retira el peso.'
    };
    if (text.includes('usar') || text.includes('como funciona') || text.includes('funcionar') || text.includes('instrucciones')) return info.uso;
    if (text.includes('boton') || text.includes('botones')) return info.botones;
    if (text.includes('voltaje') || text.includes('energia') || text.includes('consumo')) return info.energia;
    if (text.includes('capacidad') || text.includes('velocidad') || text.includes('cuantos huevos')) return info.capacidad;
    if (text.includes('categoria') || text.includes('clasificar') || text.includes('peso')) return info.categorias;
    if (text.includes('calibrar') || text.includes('calibracion')) return info.calibracion;
    if (text.includes('hola') || text.includes('buenas') || text.includes('saludo')) return '¬°Hola! Soy Huev√≠n üê£ ¬øEn qu√© te puedo ayudar?';
    return 'Lo siento, no cuento con esa informaci√≥n en este momento. Para mayor ayuda, contacta con el Grupo D.';
  }

  function appendChat(sender, text) {
    const container = document.getElementById('chatbot');
    const p = document.createElement('p');
    p.innerHTML = `<strong>${sender}:</strong> ${text}`;
    container.appendChild(p);
    container.scrollTop = container.scrollHeight;
  }

  document.getElementById('sendBtn').addEventListener('click', () => {
    const input = document.getElementById('chatInput');
    const userMsg = input.value.trim();
    if (!userMsg) return;
    appendChat('T√∫', userMsg);
    const reply = botReply(userMsg);
    appendChat('Huev√≠n', reply);
    input.value = '';
  });

  // Saludo autom√°tico de Huev√≠n al cargar
  window.addEventListener('DOMContentLoaded', () => {
    appendChat('Huev√≠n', '¬°Hola! Soy Huev√≠n üê£ tu asistente virtual. Estoy aqu√≠ para ayudarte.');
  });
</script>
</body>
</html>
